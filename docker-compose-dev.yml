version: '3.3'

services:

  tasks:
    container_name: tasks
    build:
      context: ./services/tasks
      dockerfile: Dockerfile-dev
    volumes:
      - './services/tasks:/usr/src/app'
    expose:
      - '5000'
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@tasks-db:5432/tasks_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@tasks-db:5432/tasks_test
    depends_on:
      - tasks-db
    links:
      - tasks-db

  tasks-db:
    container_name: tasks-db
    build:
      context: ./services/tasks/project/db
      dockerfile: Dockerfile
    ports:
      - 5435:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  users:
    container_name: users
    build:
      context: ./services/users
      dockerfile: Dockerfile-dev
    volumes:
      - './services/users:/usr/src/app'
    expose:
      - '5000'
    environment:
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@users-db:5432/users_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@users-db:5432/users_test
    depends_on:
      - users-db
    links:
      - users-db

  users-db:
    container_name: users-db
    build:
      context: ./services/users/project/db
      dockerfile: Dockerfile
    ports:
      - 5436:5433
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  nginx:
    container_name: nginx
    build: 
      context: ./services/nginx/
      dockerfile: Dockerfile
    restart: always
    ports:
      - 80:80
    depends_on:
      - users
      - client-react
      - looker
      - github-service
    links:
      - users
      - client-react
      - looker
      - github-service

  client-react:
    container_name: client-react
    build:
      context: ./services/client-react
      dockerfile: Dockerfile-dev
    volumes:
      - './services/client-react:/usr/src/app'
      - '/usr/src/app/node_modules'
    ports:
      - '3007:3000'
    environment:
      - NODE_ENV=development
      - REACT_APP_TASKS_SERVICE_URL=${DX_IP}/tasks
      # - REACT_APP_TASKS_SERVICE_URL=${REACT_APP_TASKS_SERVICE_URL}
    depends_on:
      - tasks
    links:
      - tasks

  looker:
      container_name: looker
      build: 
        context: ./services/looker
        dockerfile: Dockerfile-dev
      volumes:
        - './services/looker:/usr/src/app'
      expose:
        - '5000'
      environment:
        - MAIL_SENDS=4404
        - INVOICING=4405
        - FLASK_ENV=development
        - APP_SETTINGS=project.config.DevelopmentConfig
        - DATABASE_URL=postgres://postgres:postgres@looker-db:5432/dx_looker_dev
        - DATABASE_TEST_URL=postgres://postgres:postgres@looker-db:5432/dx_looker_test
        - LOOKER_CLIENT_ID=${LOOKER_CLIENT_ID}
        - LOOKER_CLIENT_SECRET=${LOOKER_CLIENT_SECRET}
        - LOOKER_ENDPOINT=${LOOKER_ENDPOINT}
      depends_on:
        - looker-db
      links:
        - looker-db

  looker-db:
      container_name: looker-db
      build: 
        context: ./services/looker/project/db_creation
        dockerfile: Dockerfile
      ports:
        - 5434:5431
      environment:
        - POSTGRES_LOOKER=postgres
        - POSTGRES_PASSWORD=postgres

  github-service:
    container_name: github-service
    build: ./services/github
    volumes:
      - './services/github:/usr/src/app'
    expose:
      - '5000'
    environment:
      - APP_SETTINGS=project.config.DevelopmentConfig
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_ORG=${GITHUB_ORG}

  hacktoberfest:
    container_name: hacktoberfest
    build: 
        context: ./services/hacktoberfest
        dockerfile: Dockerfile-dev
    volumes:
      - './services/hacktoberfest:/usr/src/app'
    expose:
      - '5000'
    environment:
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=${DATABASE_URL}
      - DX_IP=${DX_IP}
